stages:
   - deploy

.deploy-template: &deploy-template
  script:
      - cd $project_path
      - git config --global --add safe.directory $project_path
      - git checkout $CI_COMMIT_REF_NAME
      - git fetch $CI_REPOSITORY_URL
      - git pull $CI_REPOSITORY_URL $CI_COMMIT_BRANCH
      - chmod +x django-entrypoint.sh
      - chmod +x celery-entrypoint.sh
      - docker compose --env-file .docker.env down
      - docker compose --env-file .docker.env up -d  


Deploy to Dev:
   stage: deploy
   tags:
       - alm-dev-backend
   variables:
      project_path: '/var/www/alm-dev/alm-backend'
      # venv_path: '/var/www/fieldforce/ff_old_env/bin/activate'
   script:
      - cd $project_path
      - git config --global --add safe.directory $project_path
      - git checkout $CI_COMMIT_REF_NAME
      - git fetch $CI_REPOSITORY_URL
      - git pull $CI_REPOSITORY_URL $CI_COMMIT_BRANCH
      - chmod +x django-entrypoint.sh
      - chmod +x celery-entrypoint.sh
      - docker-compose --env-file .docker.env down
      - docker-compose --env-file .docker.env up -d
   only:
      refs: 
          - develop
   environment:
      name: develop

Deploy to Prod:
    stage: deploy
    when: manual
    tags:
       - avl-prod-backend
    variables:
       project_path: '/var/www/avl-production/backend'
    <<: *deploy-template
    environment:
       name: prod
    only:
       refs: 
           - main
         
Deploy to Prod (avl-apollo):
    stage: deploy
    when: manual
    tags:
       - avl-apollo-prod-backend
    variables:
       project_path: '/var/www/avl-production/backend/'
    <<: *deploy-template
    environment:
       name: avl-apollo 
    only:
       refs: 
           - main

Deploy to Prod (avl-vidhi):
    stage: deploy
    when: manual
    tags:
       - avl-vidhi-prod
    variables:
       project_path: '/var/www/avl-production/backend/'
    <<: *deploy-template
    environment:
       name: avl-vidhi
    only:
       refs: 
           - main